// mixin
@mixin angle($pseudo, $flip: false, $angle: 1.5deg) {
  // Possible values for $pseudo are: before, after, both
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 1;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      display: block;
      height: 50%;
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
      -webkit-backface-visibility: hidden; // for Chrome Windows
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }

      &:after {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}

// slanted edges here
.edge--bottom {
  @include angle(after);
}

.edge--skew { 
    transform: skewX(-20deg);
    display: inline-block;
    
    span { 
        transform: skewX(20deg);
        display: inline-block;
    } 
   
    a { 
        transform: skewX(20deg);
        display: inline-block;
    }
}

.edge--bottom-detail {
    @include angle(after);
    transform: skewY(-2.5deg);
    z-index: 0;
    position: absolute;
    width: 100%;
    top: 18px;
    left: 0;
    height: 437px;
    background: rgba(43,43,43,1);
    background: -moz-linear-gradient(left, rgba(43,43,43,1) 0%, rgba(109,109,109,1) 100%);
    background: -webkit-gradient(left top, right top, color-stop(0%, rgba(43,43,43,1)), color-stop(100%, rgba(109,109,109,1)));
    background: -webkit-linear-gradient(left, rgba(43,43,43,1) 0%, rgba(109,109,109,1) 100%);
    background: -o-linear-gradient(left, rgba(43,43,43,1) 0%, rgba(109,109,109,1) 100%);
    background: -ms-linear-gradient(left, rgba(43,43,43,1) 0%, rgba(109,109,109,1) 100%);
    background: linear-gradient(to right, rgba(43,43,43,1) 0%, rgba(109,109,109,1) 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#2b2b2b', endColorstr='#6d6d6d', GradientType=1 );
}

.edge--bottom--reverse {
  @include angle(after, true);
}

.edge--top {
  @include angle(before);
}

.edge--top--reverse {
  @include angle(before, true);
}

.edge--both {
  @include angle(both);
}

.edge--both--reverse {
  @include angle(both, true);
}

.-berry {
  background: #b52b4a;
}

.-blue {
  background: #41ade5
}

.-orange {
  background: #de6628;
}

.-green {
  background: #5e9b42;
}

